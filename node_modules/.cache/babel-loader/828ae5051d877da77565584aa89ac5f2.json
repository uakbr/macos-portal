{"ast":null,"code":"import nightwind from \"nightwind/helper\";\nimport { enterFullScreen, exitFullScreen } from \"../utils/screen\";\nexport const type = {\n  TOGGLE_DARK: \"TOGGLE_DARK\",\n  SET_VOLUME: \"SET_VOLUME\",\n  SET_BRIGHTNESS: \"SET_BRIGHTNESS\",\n  TOGGLE_WIFI: \"TOGGLE_WIFI\",\n  TOGGLE_BLUETOOTH: \"TOGGLE_BLUETOOTH\",\n  TOGGLE_AIRDROP: \"TOGGLE_AIRDROP\",\n  TOGGLE_FULLSCREEN: \"TOGGLE_FULLSCREEN\"\n};\nexport const toggleDark = dark => {\n  nightwind.toggle();\n  return {\n    type: type.TOGGLE_DARK,\n    dark\n  };\n};\nexport const setVolume = volume => {\n  return {\n    type: type.SET_VOLUME,\n    volume\n  };\n};\nexport const setBrightness = brightness => {\n  return {\n    type: type.SET_BRIGHTNESS,\n    brightness\n  };\n};\nexport const toggleFullScreen = fullscreen => {\n  fullscreen ? enterFullScreen() : exitFullScreen();\n  return {\n    type: type.TOGGLE_FULLSCREEN,\n    fullscreen\n  };\n};\nexport const toggleWIFI = wifi => {\n  return {\n    type: type.TOGGLE_WIFI,\n    wifi\n  };\n};\nexport const toggleBleutooth = bluetooth => {\n  return {\n    type: type.TOGGLE_BLUETOOTH,\n    bluetooth\n  };\n};\nexport const toggleAirdrop = airdrop => {\n  return {\n    type: type.TOGGLE_AIRDROP,\n    airdrop\n  };\n};","map":{"version":3,"sources":["C:/Users/usa/Downloads/macos-portfolio-main/src/redux/action.js"],"names":["nightwind","enterFullScreen","exitFullScreen","type","TOGGLE_DARK","SET_VOLUME","SET_BRIGHTNESS","TOGGLE_WIFI","TOGGLE_BLUETOOTH","TOGGLE_AIRDROP","TOGGLE_FULLSCREEN","toggleDark","dark","toggle","setVolume","volume","setBrightness","brightness","toggleFullScreen","fullscreen","toggleWIFI","wifi","toggleBleutooth","bluetooth","toggleAirdrop","airdrop"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,iBAAhD;AAEA,OAAO,MAAMC,IAAI,GAAG;AAClBC,EAAAA,WAAW,EAAE,aADK;AAElBC,EAAAA,UAAU,EAAE,YAFM;AAGlBC,EAAAA,cAAc,EAAE,gBAHE;AAIlBC,EAAAA,WAAW,EAAE,aAJK;AAKlBC,EAAAA,gBAAgB,EAAE,kBALA;AAMlBC,EAAAA,cAAc,EAAE,gBANE;AAOlBC,EAAAA,iBAAiB,EAAE;AAPD,CAAb;AAUP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAClCZ,EAAAA,SAAS,CAACa,MAAV;AACA,SAAO;AACLV,IAAAA,IAAI,EAAEA,IAAI,CAACC,WADN;AAELQ,IAAAA;AAFK,GAAP;AAID,CANM;AAQP,OAAO,MAAME,SAAS,GAAIC,MAAD,IAAY;AACnC,SAAO;AACLZ,IAAAA,IAAI,EAAEA,IAAI,CAACE,UADN;AAELU,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,aAAa,GAAIC,UAAD,IAAgB;AAC3C,SAAO;AACLd,IAAAA,IAAI,EAAEA,IAAI,CAACG,cADN;AAELW,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AAC9CA,EAAAA,UAAU,GAAGlB,eAAe,EAAlB,GAAuBC,cAAc,EAA/C;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEA,IAAI,CAACO,iBADN;AAELS,IAAAA;AAFK,GAAP;AAID,CANM;AAQP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAClC,SAAO;AACLlB,IAAAA,IAAI,EAAEA,IAAI,CAACI,WADN;AAELc,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,eAAe,GAAIC,SAAD,IAAe;AAC5C,SAAO;AACLpB,IAAAA,IAAI,EAAEA,IAAI,CAACK,gBADN;AAELe,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACxC,SAAO;AACLtB,IAAAA,IAAI,EAAEA,IAAI,CAACM,cADN;AAELgB,IAAAA;AAFK,GAAP;AAID,CALM","sourcesContent":["import nightwind from \"nightwind/helper\";\nimport { enterFullScreen, exitFullScreen } from \"../utils/screen\";\n\nexport const type = {\n  TOGGLE_DARK: \"TOGGLE_DARK\",\n  SET_VOLUME: \"SET_VOLUME\",\n  SET_BRIGHTNESS: \"SET_BRIGHTNESS\",\n  TOGGLE_WIFI: \"TOGGLE_WIFI\",\n  TOGGLE_BLUETOOTH: \"TOGGLE_BLUETOOTH\",\n  TOGGLE_AIRDROP: \"TOGGLE_AIRDROP\",\n  TOGGLE_FULLSCREEN: \"TOGGLE_FULLSCREEN\"\n};\n\nexport const toggleDark = (dark) => {\n  nightwind.toggle();\n  return {\n    type: type.TOGGLE_DARK,\n    dark\n  };\n};\n\nexport const setVolume = (volume) => {\n  return {\n    type: type.SET_VOLUME,\n    volume\n  };\n};\n\nexport const setBrightness = (brightness) => {\n  return {\n    type: type.SET_BRIGHTNESS,\n    brightness\n  };\n};\n\nexport const toggleFullScreen = (fullscreen) => {\n  fullscreen ? enterFullScreen() : exitFullScreen();\n  return {\n    type: type.TOGGLE_FULLSCREEN,\n    fullscreen\n  };\n};\n\nexport const toggleWIFI = (wifi) => {\n  return {\n    type: type.TOGGLE_WIFI,\n    wifi\n  };\n};\n\nexport const toggleBleutooth = (bluetooth) => {\n  return {\n    type: type.TOGGLE_BLUETOOTH,\n    bluetooth\n  };\n};\n\nexport const toggleAirdrop = (airdrop) => {\n  return {\n    type: type.TOGGLE_AIRDROP,\n    airdrop\n  };\n};\n"]},"metadata":{},"sourceType":"module"}